sub get_commands($$)
{
	my $xml    = shift;
	my $plugin = shift;

	my $c = $xml->{command};
	my @tmpcmds = ();
	my %seen;

	#return !defined($c);
	while (my ($key, $value) = each %{$c})
	{
		next if DetectInvalidConfig($key,$value,$c);
		my $alias;
		my $syn = "$value->{syntax}->{value}";
		my $sname = get_syntax_command_name($syn);
		my $slength = length($sname);
		my $temp = substr($sname, $slength + 1);
		$sname = lc($sname);
		#$syn = $sname . $temp;
		$sname =~ s/\!//g;
		my $help = $value->{help}->{value};
		my $syntax = $value->{syntax}->{value};
		my $permission = get_permission($value->{permission}->{level});
		my $modlevel = "Mod Level: $permission";
		
		if ( $value->{alias} )
		{
			if ( ref($value->{alias}) eq "ARRAY" )
			{
				foreach ( @{$value->{alias}} )
				{
					my %alias = ( 'name' => $_, 'alias' => $key );
					$alias = $alias . "!" . $alias{name} . " ";
				}
			}
			else
			{
				my %alias = ( 'name' => $value->{alias}, 'alias' => $key );
				$alias = $alias . "!" . $alias{name} . " ";
			}
		}
		
		my $enabled = $value->{enabled}->{value};
		$plugin = "None" if ( $plugin eq "" || !defined($plugin));
		$alias = "None" if ( $alias eq "" || !defined($alias));
		if ( $enabled == 1 )
		{
			push(@tmpcmds, { name => $sname, enabled => $enabled, syntax => $syntax, help => $help, permission => $permission, plugin => $plugin, alias => $alias });
			$command_count++
		}
		else
		{			
			push(@disabled_commands, { name => $sname, enabled => $enabled, syntax => $syntax, help => $help, permission => $permission, plugin => $plugin, alias => $alias });
			$disabled_command_count++
		}
	}
	return @tmpcmds;	
}